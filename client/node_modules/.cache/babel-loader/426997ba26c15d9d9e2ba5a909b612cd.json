{"ast":null,"code":"var _jsxFileName = \"/Users/annehomann/coder_academy/term4/moviemate/client/src/components/views/FavouritePage/FavouritePage.js\";\n// ----------------------------------------\n//         Favourite Page Component\n// ----------------------------------------\nimport React, { useEffect, useState } from 'react';\nimport { Typography, Popover, Button } from 'antd';\nimport axios from 'axios'; // Bring in specific style\n\nimport './favourite.css';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../Config';\nconst {\n  Title\n} = Typography; // This function is the main engine of the Favourites Page functionality \n\nfunction FavouritePage() {\n  const user = useSelector(state => state.user);\n  const [Favourites, setFavourites] = useState([]);\n  const [Loading, setLoading] = useState(true); // Gets user ID\n\n  let variable = {\n    userFrom: localStorage.getItem('userId')\n  };\n  useEffect(() => {\n    fetchFavouredMovie();\n  }, []);\n\n  const fetchFavouredMovie = () => {\n    axios.post('/api/favourite/getFavouredMovie', variable).then(response => {\n      if (response.data.success) {\n        console.log(response.data.favourites);\n        setFavourites(response.data.favourites);\n        setLoading(false);\n      } else {\n        alert('Failed to get subscription videos');\n      }\n    });\n  };\n\n  const onClickDelete = (movieId, userFrom) => {\n    const variables = {\n      movieId: movieId,\n      userFrom: userFrom\n    };\n    axios.post('/api/favourite/removeFromFavourite', variables).then(response => {\n      if (response.data.success) {\n        fetchFavouredMovie();\n      } else {\n        alert('Failed to Remove From Favourite');\n      }\n    });\n  };\n\n  const renderCards = Favourites.map((favourite, index) => {\n    // Table of movies that have been added to favourites\n    const content = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, favourite.moviePost ? /*#__PURE__*/React.createElement(\"img\", {\n      src: `${IMAGE_BASE_URL}${POSTER_SIZE}${favourite.moviePost}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }) : \"no image\");\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Popover, {\n      content: content,\n      title: `${favourite.movieTitle}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, favourite.movieTitle)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, favourite.movieRunTime, \" mins\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => onClickDelete(favourite.movieId, favourite.userFrom),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \" Remove \")));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '85%',\n      margin: '4rem auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \" Favourite Movies By Me \"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), user.userData && !user.userData.isAuth ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100%',\n      fontSize: '2rem',\n      height: '500px',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Please Log in first...\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Go to Login page\")) : !Loading && /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 29\n    }\n  }, \"Movie Title\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 29\n    }\n  }, \"Movie RunTime\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, \"Remove from favourites\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, renderCards)));\n}\n\nexport default FavouritePage;","map":{"version":3,"sources":["/Users/annehomann/coder_academy/term4/moviemate/client/src/components/views/FavouritePage/FavouritePage.js"],"names":["React","useEffect","useState","Typography","Popover","Button","axios","useSelector","IMAGE_BASE_URL","POSTER_SIZE","Title","FavouritePage","user","state","Favourites","setFavourites","Loading","setLoading","variable","userFrom","localStorage","getItem","fetchFavouredMovie","post","then","response","data","success","console","log","favourites","alert","onClickDelete","movieId","variables","renderCards","map","favourite","index","content","moviePost","movieTitle","movieRunTime","width","margin","userData","isAuth","fontSize","height","display","flexDirection","justifyContent","alignItems"],"mappings":"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","sourcesContent":["// ----------------------------------------\n//         Favourite Page Component\n// ----------------------------------------\n\nimport React, { useEffect, useState } from 'react'\nimport { Typography, Popover, Button } from 'antd';\nimport axios from 'axios';\n// Bring in specific style\nimport './favourite.css';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../Config'\n\nconst { Title } = Typography;\n\n// This function is the main engine of the Favourites Page functionality \nfunction FavouritePage() {\n    const user = useSelector(state => state.user)\n\n    const [Favourites, setFavourites] = useState([])\n    const [Loading, setLoading] = useState(true)\n    // Gets user ID\n    let variable = { userFrom: localStorage.getItem('userId') }\n\n    useEffect(() => {\n        fetchFavouredMovie()\n    }, [])\n\n    const fetchFavouredMovie = () => {\n        axios.post('/api/favourite/getFavouredMovie', variable)\n            .then(response => {\n                if (response.data.success) {\n                    console.log(response.data.favourites)\n                    setFavourites(response.data.favourites)\n                    setLoading(false)\n                } else {\n                    alert('Failed to get subscription videos')\n                }\n            })\n    }\n\n    const onClickDelete = (movieId, userFrom) => {\n\n        const variables = {\n            movieId: movieId,\n            userFrom: userFrom,\n        }\n\n        axios.post('/api/favourite/removeFromFavourite', variables)\n            .then(response => {\n                if (response.data.success) {\n                    fetchFavouredMovie()\n                } else {\n                    alert('Failed to Remove From Favourite')\n                }\n            })\n    }\n\n\n    const renderCards = Favourites.map((favourite, index) => {\n\n        // Table of movies that have been added to favourites\n        const content = (\n            <div>\n                {favourite.moviePost ?\n                    <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${favourite.moviePost}`} />\n                    : \"no image\"}\n            </div>\n        );\n\n        return <tr key={index}>\n\n            <Popover content={content} title={`${favourite.movieTitle}`}>\n                <td>{favourite.movieTitle}</td>\n            </Popover>\n\n            <td>{favourite.movieRunTime} mins</td>\n            <td><button onClick={() => onClickDelete(favourite.movieId, favourite.userFrom)}> Remove </button></td>\n        </tr>\n    })\n\n    return (\n        <div style={{ width: '85%', margin: '4rem auto' }}>\n            <Title level={2} > Favourite Movies By Me </Title>\n            <hr />\n            {user.userData && !user.userData.isAuth ?\n                <div style={{ width: '100%', fontSize: '2rem', height: '500px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                    <p>Please Log in first...</p>\n                    <a href=\"/login\">Go to Login page</a>\n                </div>\n                :\n                !Loading &&\n                <table>\n                    <thead>\n                        <tr>\n                            <th>Movie Title</th>\n                            <th>Movie RunTime</th>\n                            <td>Remove from favourites</td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {renderCards}\n                    </tbody>\n                </table>\n            }\n        </div>\n    )\n}\n\nexport default FavouritePage\n"]},"metadata":{},"sourceType":"module"}