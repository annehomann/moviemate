{"ast":null,"code":"var _jsxFileName = \"/Users/annehomann/coder_academy/term4/moviemate/client/src/components/views/RegisterPage/RegisterPage.js\";\n// ----------------------------------------\n//         Sign up Page Component\n// ----------------------------------------\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Input, Button } from 'antd';\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 16,\n      offset: 8\n    }\n  }\n}; // This function is the main engine of the Sign Up functionality\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    /*#__PURE__*/\n    // Initial Sign Up form\n    React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      } // Start of schema builder for value parsing and validation\n      ,\n      validationSchema: Yup.object().shape({\n        name: Yup.string().required('Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string().email('Email is invalid').required('Email is required'),\n        password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n        confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required')\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n          setSubmitting(false);\n        }, 500);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, props => {\n      const {\n        values,\n        touched,\n        errors,\n        dirty,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset\n      } = props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"app\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      }, \"Sign up\"), /*#__PURE__*/React.createElement(Form, Object.assign({\n        style: {\n          minWidth: '375px'\n        }\n      }, formItemLayout, {\n        onSubmit: handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Form.Item, {\n        required: true,\n        label: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"name\",\n        placeholder: \"Enter your name\",\n        type: \"text\",\n        value: values.name,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.name && touched.name ? 'text-input error' : 'text-input',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, errors.name)), /*#__PURE__*/React.createElement(Form.Item, {\n        required: true,\n        label: \"Last Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"lastName\",\n        placeholder: \"Enter your Last Name\",\n        type: \"text\",\n        value: values.lastName,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.lastName && touched.lastName ? 'text-input error' : 'text-input',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }), errors.lastName && touched.lastName && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, errors.lastName)), /*#__PURE__*/React.createElement(Form.Item, {\n        required: true,\n        label: \"Email\",\n        hasFeedback: true,\n        validateStatus: errors.email && touched.email ? \"error\" : 'success',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"email\",\n        placeholder: \"Enter your Email\",\n        type: \"email\",\n        value: values.email,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.email && touched.email ? 'text-input error' : 'text-input',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, errors.email)), /*#__PURE__*/React.createElement(Form.Item, {\n        required: true,\n        label: \"Password\",\n        hasFeedback: true,\n        validateStatus: errors.password && touched.password ? \"error\" : 'success',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"password\",\n        placeholder: \"Enter your password\",\n        type: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.password && touched.password ? 'text-input error' : 'text-input',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 17\n        }\n      }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }\n      }, errors.password)), /*#__PURE__*/React.createElement(Form.Item, {\n        required: true,\n        label: \"Confirm\",\n        hasFeedback: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Input, {\n        id: \"confirmPassword\",\n        placeholder: \"Enter your confirmPassword\",\n        type: \"password\",\n        value: values.confirmPassword,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        className: errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }), errors.confirmPassword && touched.confirmPassword && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-feedback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }\n      }, errors.confirmPassword)), /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        onClick: handleSubmit,\n        type: \"primary\",\n        disabled: isSubmitting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, \"Submit\"))));\n    })\n  );\n}\n\n;\nexport default RegisterPage;","map":{"version":3,"sources":["/Users/annehomann/coder_academy/term4/moviemate/client/src/components/views/RegisterPage/RegisterPage.js"],"names":["React","moment","Formik","Yup","registerUser","useDispatch","Form","Input","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","props","dispatch","email","lastName","name","password","confirmPassword","object","shape","string","required","min","oneOf","ref","values","setSubmitting","setTimeout","dataToSubmit","lastname","image","unix","then","response","payload","success","history","push","alert","err","errmsg","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","minWidth"],"mappings":"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","sourcesContent":["// ----------------------------------------\n//         Sign up Page Component\n// ----------------------------------------\n\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\n// This function is the main engine of the Sign Up functionality\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    // Initial Sign Up form\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      // Start of schema builder for value parsing and validation\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n"]},"metadata":{},"sourceType":"module"}