{"ast":null,"code":"import _slicedToArray from\"/Users/annehomann/coder_academy/term4/moviemate/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// ------------------------------------\n//         Favourite Component\n// ------------------------------------\nimport React,{useEffect,useState}from'react';import axios from'axios';import{Button}from'antd';import{useSelector}from'react-redux';// This function is the main engine of the Favourites functionality \nfunction Favourite(props){var user=useSelector(function(state){return state.user;});var movieId=props.movieId;var userFrom=props.userFrom;var movieTitle=props.movieInfo.title;var moviePost=props.movieInfo.backdrop_path;var movieRunTime=props.movieInfo.runtime;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),FavouriteNumber=_useState2[0],setFavouriteNumber=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),Favourited=_useState4[0],setFavourited=_useState4[1];var variables={movieId:movieId,userFrom:userFrom,movieTitle:movieTitle,moviePost:moviePost,movieRunTime:movieRunTime};// When movie is added to favourites\nvar onClickFavourite=function onClickFavourite(){if(user.userData&&!user.userData.isAuth){return alert('Please Log in first');}if(Favourited){// when we are already subscribed \n// Promise HTTP request\naxios.post('/api/favourite/removeFromFavourite',variables).then(function(response){if(response.data.success){setFavouriteNumber(FavouriteNumber-1);setFavourited(!Favourited);}else{alert('Failed to Remove From Favourite');}});}else{// when we are not subscribed yet\n// Promise HTTP request\naxios.post('/api/favourite/addToFavourite',variables).then(function(response){if(response.data.success){setFavouriteNumber(FavouriteNumber+1);setFavourited(!Favourited);}else{alert('Failed to Add To Favourite');}});}};useEffect(function(){// Promise HTTP request\naxios.post('/api/favourite/favouriteNumber',variables).then(function(response){if(response.data.success){setFavouriteNumber(response.data.subscribeNumber);}else{alert('Failed to get Favourite Number');}});// Promise HTTP request\naxios.post('/api/favourite/favourited',variables).then(function(response){if(response.data.success){setFavourited(response.data.subcribed);}else{alert('Failed to get Favourite Information');}});},[]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{onClick:onClickFavourite},\" \",!Favourited?\"Add to Favourite\":\"Not Favourite\",\" \",FavouriteNumber));}export default Favourite;","map":{"version":3,"sources":["/Users/annehomann/coder_academy/term4/moviemate/client/src/components/views/MovieDetail/Sections/Favourite.js"],"names":["React","useEffect","useState","axios","Button","useSelector","Favourite","props","user","state","movieId","userFrom","movieTitle","movieInfo","title","moviePost","backdrop_path","movieRunTime","runtime","FavouriteNumber","setFavouriteNumber","Favourited","setFavourited","variables","onClickFavourite","userData","isAuth","alert","post","then","response","data","success","subscribeNumber","subcribed"],"mappings":"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","sourcesContent":["// ------------------------------------\n//         Favourite Component\n// ------------------------------------\nimport React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\n\n// This function is the main engine of the Favourites functionality \nfunction Favourite(props) {\n    const user = useSelector(state => state.user)\n\n    const movieId = props.movieId\n    const userFrom = props.userFrom\n    const movieTitle = props.movieInfo.title\n    const moviePost = props.movieInfo.backdrop_path\n    const movieRunTime = props.movieInfo.runtime\n\n    const [FavouriteNumber, setFavouriteNumber] = useState(0)\n    const [Favourited, setFavourited] = useState(false)\n    const variables = {\n        movieId: movieId,\n        userFrom: userFrom,\n        movieTitle: movieTitle,\n        moviePost: moviePost,\n        movieRunTime: movieRunTime\n    }\n\n    // When movie is added to favourites\n    const onClickFavourite = () => {\n\n        if (user.userData && !user.userData.isAuth) {\n            return alert('Please Log in first');\n        }\n\n        if (Favourited) {\n            // when we are already subscribed \n            // Promise HTTP request\n            axios.post('/api/favourite/removeFromFavourite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavouriteNumber(FavouriteNumber - 1)\n                        setFavourited(!Favourited)\n                    } else {\n                        alert('Failed to Remove From Favourite')\n                    }\n                })\n\n        } else {\n            // when we are not subscribed yet\n            // Promise HTTP request\n            axios.post('/api/favourite/addToFavourite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavouriteNumber(FavouriteNumber + 1)\n                        setFavourited(!Favourited)\n                    } else {\n                        alert('Failed to Add To Favourite')\n                    }\n                })\n        }\n    }\n\n    useEffect(() => {\n        // Promise HTTP request\n        axios.post('/api/favourite/favouriteNumber', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setFavouriteNumber(response.data.subscribeNumber)\n                } else {\n                    alert('Failed to get Favourite Number')\n                }\n            })\n\n        // Promise HTTP request\n        axios.post('/api/favourite/favourited', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setFavourited(response.data.subcribed)\n                } else {\n                    alert('Failed to get Favourite Information')\n                }\n            })\n\n    }, [])\n\n\n    return (\n        <>\n            <Button onClick={onClickFavourite} > {!Favourited ? \"Add to Favourite\" : \"Not Favourite\"} {FavouriteNumber}</Button>\n        </>\n    )\n}\n\nexport default Favourite\n\n"]},"metadata":{},"sourceType":"module"}